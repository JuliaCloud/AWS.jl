# ```
# aws cloudformation update-stack --stack-name AWS-jl-test --template-body file://aws_jl_test.yaml --capabilities CAPABILITY_NAMED_IAM --region us-east-1
# ```

---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  A stack for testing AWS.jl from public CI

Parameters:
  GitHubOrg:
    Description: GitHub organization used as part of assuming the CI role
    Type: String
    AllowedPattern: ^[\w.-]+$
    Default: JuliaCloud

  GitHubRepo:
    Description: GitHub repository used as part of assuming the CI role
    Type: String
    AllowedPattern: ^[\w.-]+$
    Default: AWS.jl

Outputs:
  MFAUserAccessKey:
    Value: !Ref MFAUserAccessKey
  MFAUserSecretKey:
    Value: !GetAtt MFAUserAccessKey.SecretAccessKey

Resources:
  PublicCIRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role used for testing
      RoleName: !Ref GitHubRepo
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              # Requires that an Identify Provider has been manually added in the AWS account.
              # https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html#manage-oidc-provider-console
              # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services#adding-the-identity-provider-to-aws
              Federated: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                # Allow pull requests, the master branch, and any tag to assume this role
                token.actions.githubusercontent.com:sub:
                  - !Sub repo:${GitHubOrg}/${GitHubRepo}:pull_request
                  - !Sub repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/master
                  - !Sub repo:${GitHubOrg}/${GitHubRepo}:ref:refs/tags/*
          # - Effect: Allow
          #   Principal:
          #     AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          #   Action: sts:AssumeRole

  PublicCIAssumePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PublicCIAssumeRoles
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*

  StackInfoPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow access to stack outputs
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudformation:DescribeStacks
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*

  IAMTestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-IAMTestPolicy
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:CreatePolicy
              - iam:GetPolicyVersion
              - iam:DeletePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/aws-jl-test-*
  SecretsManagerTestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-SecretsManagerTestPolicy
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DeleteSecret
            Resource: !Sub arn:aws:secretsmanager:*:${AWS::AccountId}:secret:aws-jl-test-*
          - Effect: Allow
            Action: secretsmanager:CreateSecret
            Resource: "*"
  GlacierTestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-GlacierTestPolicy
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - glacier:AddTagsToVault
              - glacier:CreateVault
              - glacier:DeleteVault
              - glacier:ListTagsForVault
            Resource: !Sub arn:aws:glacier:*:${AWS::AccountId}:vaults/aws-jl-test-*
          - Effect: Allow
            Action: glacier:ListVaults
            Resource: "*"
  S3TestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-S3TestPolicy
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: "*"
          - Effect: Allow
            Action:
              - s3:GetBucketPolicyStatus
              - s3:ListBucketByTags
              - s3:GetBucketTagging
              - s3:PutBucketTagging
              - s3:ListBucketVersions
              - s3:CreateBucket
              - s3:ListBucket
              - s3:GetBucketVersioning
              - s3:DeleteBucket
              - s3:PutBucketVersioning
            Resource: arn:aws:s3:::aws-jl-test-*
          - Effect: Allow
            Action:
              - s3:DeleteObjectTagging
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObjectVersion
              - s3:GetObjectVersionTagging
              - s3:PutObjectVersionTagging
              - s3:GetObjectTagging
              - s3:PutObjectTagging
              - s3:DeleteObjectVersionTagging
              - s3:DeleteObject
              - s3:GetObjectVersion
            Resource: arn:aws:s3:::aws-jl-test-*/*
  SQSTestPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-SQSTestPolicy
      Roles:
        - !Ref PublicCIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sqs:ListQueues
            Resource: "*"
          - Effect: Allow
            Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
              - sqs:CreateQueue
              - sqs:DeleteMessage
              - sqs:DeleteMessageBatch
              - sqs:DeleteQueue
              - sqs:SendMessage
              - sqs:SendMessageBatch
              - sqs:SetQueueAttributes
            Resource: !Sub arn:aws:sqs:*:${AWS::AccountId}:aws-jl-test-*

  ###
  ### Testset specific roles/policies
  ###

  AssumeRoleTestsetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${GitHubRepo}-AssumeRoleTestset
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt PublicCIRole.Arn
            Action: sts:AssumeRole

  AssumeRoleTestsetPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-AssumeRoleTestset
      Roles:
        - !Ref AssumeRoleTestsetRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt RoleA.Arn

  # No permissions are required to perform the `sts:GetCallerIdentity` action
  # https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html

  RoleA:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${GitHubRepo}-RoleA
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt AssumeRoleTestsetRole.Arn
                - !GetAtt MFAUser.Arn
            Action: sts:AssumeRole

  RoleAPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${GitHubRepo}-RoleA
      Roles:
        - !Ref RoleA
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt RoleB.Arn

  RoleB:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${GitHubRepo}-RoleB
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt RoleA.Arn
            Action: sts:AssumeRole

  # !!! Important !!!
  # Be extremely careful to limit the MFAUser to have limited access such that if the
  # access keys for this user ever leaked there wouldn't be any harm done.

  MFAUser:
    Type: AWS::IAM::User
    Properties:
      UserName: aws-jl-mfa-user

  MFAUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref MFAUser

  MFAUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ManageMFA
      Users:
        - !Ref MFAUser
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          # https://repost.aws/knowledge-center/mfa-iam-user-aws-cli
          - Effect: Deny
            NotAction:
              - iam:CreateVirtualMFADevice
              - iam:EnableMFADevice
              - iam:DeactivateMFADevice
              - iam:DeleteVirtualMFADevice
            Resource: "*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false
          - Effect: Allow
            Action:
              - iam:CreateVirtualMFADevice
              - iam:DeleteVirtualMFADevice
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:mfa/aws-jl-*
          - Effect: Allow
            Action:
              - iam:EnableMFADevice
              - iam:DeactivateMFADevice
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:user/${MFAUser}
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt RoleA.Arn
