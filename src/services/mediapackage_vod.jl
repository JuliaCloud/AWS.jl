# This file is auto-generated by AWSMetadata.jl
include("../AWSServices.jl")
using .AWSServices: mediapackage_vod

"""
    CreateAsset()

Creates a new MediaPackage VOD Asset resource.

Required Parameters
{
  "Id": "The unique identifier for the Asset.",
  "PackagingGroupId": "The ID of the PackagingGroup for the Asset.",
  "SourceArn": "ARN of the source object in S3.",
  "SourceRoleArn": "The IAM role ARN used to access the source S3 bucket."
}

Optional Parameters
{
  "ResourceId": "The resource ID to include in SPEKE key requests.",
  "Tags": ""
}
"""
CreateAsset(Id, PackagingGroupId, SourceArn, SourceRoleArn) = mediapackage_vod("POST", "/assets")
CreateAsset(Id, PackagingGroupId, SourceArn, SourceRoleArn, args) = mediapackage_vod("POST", "/assets", args)
CreateAsset(a...; b...) = CreateAsset(a..., b)

"""
    CreatePackagingConfiguration()

Creates a new MediaPackage VOD PackagingConfiguration resource.

Required Parameters
{
  "Id": "The ID of the PackagingConfiguration.",
  "PackagingGroupId": "The ID of a PackagingGroup."
}

Optional Parameters
{
  "CmafPackage": "",
  "DashPackage": "",
  "HlsPackage": "",
  "MssPackage": "",
  "Tags": ""
}
"""
CreatePackagingConfiguration(Id, PackagingGroupId) = mediapackage_vod("POST", "/packaging_configurations")
CreatePackagingConfiguration(Id, PackagingGroupId, args) = mediapackage_vod("POST", "/packaging_configurations", args)
CreatePackagingConfiguration(a...; b...) = CreatePackagingConfiguration(a..., b)

"""
    CreatePackagingGroup()

Creates a new MediaPackage VOD PackagingGroup resource.

Required Parameters
{
  "Id": "The ID of the PackagingGroup."
}

Optional Parameters
{
  "Authorization": "",
  "Tags": ""
}
"""
CreatePackagingGroup(Id) = mediapackage_vod("POST", "/packaging_groups")
CreatePackagingGroup(Id, args) = mediapackage_vod("POST", "/packaging_groups", args)
CreatePackagingGroup(a...; b...) = CreatePackagingGroup(a..., b)

"""
    DeleteAsset()

Deletes an existing MediaPackage VOD Asset resource.

Required Parameters
{
  "Id": "The ID of the MediaPackage VOD Asset resource to delete."
}
"""
DeleteAsset(Id) = mediapackage_vod("DELETE", "/assets/$(id)")
DeleteAsset(Id, args) = mediapackage_vod("DELETE", "/assets/$(id)", args)
DeleteAsset(a...; b...) = DeleteAsset(a..., b)

"""
    DeletePackagingConfiguration()

Deletes a MediaPackage VOD PackagingConfiguration resource.

Required Parameters
{
  "Id": "The ID of the MediaPackage VOD PackagingConfiguration resource to delete."
}
"""
DeletePackagingConfiguration(Id) = mediapackage_vod("DELETE", "/packaging_configurations/$(id)")
DeletePackagingConfiguration(Id, args) = mediapackage_vod("DELETE", "/packaging_configurations/$(id)", args)
DeletePackagingConfiguration(a...; b...) = DeletePackagingConfiguration(a..., b)

"""
    DeletePackagingGroup()

Deletes a MediaPackage VOD PackagingGroup resource.

Required Parameters
{
  "Id": "The ID of the MediaPackage VOD PackagingGroup resource to delete."
}
"""
DeletePackagingGroup(Id) = mediapackage_vod("DELETE", "/packaging_groups/$(id)")
DeletePackagingGroup(Id, args) = mediapackage_vod("DELETE", "/packaging_groups/$(id)", args)
DeletePackagingGroup(a...; b...) = DeletePackagingGroup(a..., b)

"""
    DescribeAsset()

Returns a description of a MediaPackage VOD Asset resource.

Required Parameters
{
  "Id": "The ID of an MediaPackage VOD Asset resource."
}
"""
DescribeAsset(Id) = mediapackage_vod("GET", "/assets/$(id)")
DescribeAsset(Id, args) = mediapackage_vod("GET", "/assets/$(id)", args)
DescribeAsset(a...; b...) = DescribeAsset(a..., b)

"""
    DescribePackagingConfiguration()

Returns a description of a MediaPackage VOD PackagingConfiguration resource.

Required Parameters
{
  "Id": "The ID of a MediaPackage VOD PackagingConfiguration resource."
}
"""
DescribePackagingConfiguration(Id) = mediapackage_vod("GET", "/packaging_configurations/$(id)")
DescribePackagingConfiguration(Id, args) = mediapackage_vod("GET", "/packaging_configurations/$(id)", args)
DescribePackagingConfiguration(a...; b...) = DescribePackagingConfiguration(a..., b)

"""
    DescribePackagingGroup()

Returns a description of a MediaPackage VOD PackagingGroup resource.

Required Parameters
{
  "Id": "The ID of a MediaPackage VOD PackagingGroup resource."
}
"""
DescribePackagingGroup(Id) = mediapackage_vod("GET", "/packaging_groups/$(id)")
DescribePackagingGroup(Id, args) = mediapackage_vod("GET", "/packaging_groups/$(id)", args)
DescribePackagingGroup(a...; b...) = DescribePackagingGroup(a..., b)

"""
    ListAssets()

Returns a collection of MediaPackage VOD Asset resources.

Optional Parameters
{
  "MaxResults": "Upper bound on number of records to return.",
  "NextToken": "A token used to resume pagination from the end of a previous request.",
  "PackagingGroupId": "Returns Assets associated with the specified PackagingGroup."
}
"""
ListAssets() = mediapackage_vod("GET", "/assets")
ListAssets(args) = mediapackage_vod("GET", "/assets", args)
ListAssets(a...; b...) = ListAssets(a..., b)

"""
    ListPackagingConfigurations()

Returns a collection of MediaPackage VOD PackagingConfiguration resources.

Optional Parameters
{
  "MaxResults": "Upper bound on number of records to return.",
  "NextToken": "A token used to resume pagination from the end of a previous request.",
  "PackagingGroupId": "Returns MediaPackage VOD PackagingConfigurations associated with the specified PackagingGroup."
}
"""
ListPackagingConfigurations() = mediapackage_vod("GET", "/packaging_configurations")
ListPackagingConfigurations(args) = mediapackage_vod("GET", "/packaging_configurations", args)
ListPackagingConfigurations(a...; b...) = ListPackagingConfigurations(a..., b)

"""
    ListPackagingGroups()

Returns a collection of MediaPackage VOD PackagingGroup resources.

Optional Parameters
{
  "MaxResults": "Upper bound on number of records to return.",
  "NextToken": "A token used to resume pagination from the end of a previous request."
}
"""
ListPackagingGroups() = mediapackage_vod("GET", "/packaging_groups")
ListPackagingGroups(args) = mediapackage_vod("GET", "/packaging_groups", args)
ListPackagingGroups(a...; b...) = ListPackagingGroups(a..., b)

"""
    ListTagsForResource()

Returns a list of the tags assigned to the specified resource.

Required Parameters
{
  "ResourceArn": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource."
}
"""
ListTagsForResource(ResourceArn) = mediapackage_vod("GET", "/tags/$(resource-arn)")
ListTagsForResource(ResourceArn, args) = mediapackage_vod("GET", "/tags/$(resource-arn)", args)
ListTagsForResource(a...; b...) = ListTagsForResource(a..., b)

"""
    TagResource()

Adds tags to the specified resource. You can specify one or more tags to add.

Required Parameters
{
  "ResourceArn": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.",
  "Tags": "A collection of tags associated with a resource"
}
"""
TagResource(ResourceArn, Tags) = mediapackage_vod("POST", "/tags/$(resource-arn)")
TagResource(ResourceArn, Tags, args) = mediapackage_vod("POST", "/tags/$(resource-arn)", args)
TagResource(a...; b...) = TagResource(a..., b)

"""
    UntagResource()

Removes tags from the specified resource. You can specify one or more tags to remove.

Required Parameters
{
  "ResourceArn": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.",
  "TagKeys": "A comma-separated list of the tag keys to remove from the resource."
}
"""
UntagResource(ResourceArn, TagKeys) = mediapackage_vod("DELETE", "/tags/$(resource-arn)")
UntagResource(ResourceArn, TagKeys, args) = mediapackage_vod("DELETE", "/tags/$(resource-arn)", args)
UntagResource(a...; b...) = UntagResource(a..., b)

"""
    UpdatePackagingGroup()

Updates a specific packaging group. You can't change the id attribute or any other system-generated attributes.

Required Parameters
{
  "Id": "The ID of a MediaPackage VOD PackagingGroup resource."
}

Optional Parameters
{
  "Authorization": ""
}
"""
UpdatePackagingGroup(Id) = mediapackage_vod("PUT", "/packaging_groups/$(id)")
UpdatePackagingGroup(Id, args) = mediapackage_vod("PUT", "/packaging_groups/$(id)", args)
UpdatePackagingGroup(a...; b...) = UpdatePackagingGroup(a..., b)
