# This file is auto-generated by AWSMetadata.jl
include("../AWSServices.jl")
using Compat
using .AWSServices: iotsecuretunneling

"""
    CloseTunnel()

Closes a tunnel identified by the unique tunnel id. When a CloseTunnel request is received, we close the WebSocket connections between the client and proxy server so no data can be transmitted.

Required Parameters
tunnelId => The ID of the tunnel to close.

Optional Parameters
delete => When set to true, AWS IoT Secure Tunneling deletes the tunnel data immediately.
"""
CloseTunnel(tunnelId) = iotsecuretunneling("CloseTunnel", Dict{String, Any}("tunnelId"=>tunnelId))
CloseTunnel(tunnelId, args::AbstractDict{String, <: Any}) = iotsecuretunneling("CloseTunnel", Dict{String, Any}("tunnelId"=>tunnelId, args...))

"""
    DescribeTunnel()

Gets information about a tunnel identified by the unique tunnel id.

Required Parameters
tunnelId => The tunnel to describe.

"""
DescribeTunnel(tunnelId) = iotsecuretunneling("DescribeTunnel", Dict{String, Any}("tunnelId"=>tunnelId))
DescribeTunnel(tunnelId, args::AbstractDict{String, <: Any}) = iotsecuretunneling("DescribeTunnel", Dict{String, Any}("tunnelId"=>tunnelId, args...))

"""
    ListTagsForResource()

Lists the tags for the specified resource.

Required Parameters
resourceArn => The resource ARN.

"""
ListTagsForResource(resourceArn) = iotsecuretunneling("ListTagsForResource", Dict{String, Any}("resourceArn"=>resourceArn))
ListTagsForResource(resourceArn, args::AbstractDict{String, <: Any}) = iotsecuretunneling("ListTagsForResource", Dict{String, Any}("resourceArn"=>resourceArn, args...))

"""
    ListTunnels()

List all tunnels for an AWS account. Tunnels are listed by creation time in descending order, newer tunnels will be listed before older tunnels.

Optional Parameters
maxResults => The maximum number of results to return at once.
nextToken => A token to retrieve the next set of results.
thingName => The name of the IoT thing associated with the destination device.
"""
ListTunnels() = iotsecuretunneling("ListTunnels")
ListTunnels(args::AbstractDict{String, <: Any}) = iotsecuretunneling("ListTunnels", args)

"""
    OpenTunnel()

Creates a new tunnel, and returns two client access tokens for clients to use to connect to the AWS IoT Secure Tunneling proxy server. .

Optional Parameters
description => A short text description of the tunnel. 
destinationConfig => The destination configuration for the OpenTunnel request.
tags => A collection of tag metadata.
timeoutConfig => Timeout configuration for a tunnel.
"""
OpenTunnel() = iotsecuretunneling("OpenTunnel")
OpenTunnel(args::AbstractDict{String, <: Any}) = iotsecuretunneling("OpenTunnel", args)

"""
    TagResource()

A resource tag.

Required Parameters
resourceArn => The ARN of the resource.
tags => The tags for the resource.

"""
TagResource(resourceArn, tags) = iotsecuretunneling("TagResource", Dict{String, Any}("resourceArn"=>resourceArn, "tags"=>tags))
TagResource(resourceArn, tags, args::AbstractDict{String, <: Any}) = iotsecuretunneling("TagResource", Dict{String, Any}("resourceArn"=>resourceArn, "tags"=>tags, args...))

"""
    UntagResource()

Removes a tag from a resource.

Required Parameters
resourceArn => The resource ARN.
tagKeys => The keys of the tags to remove.

"""
UntagResource(resourceArn, tagKeys) = iotsecuretunneling("UntagResource", Dict{String, Any}("resourceArn"=>resourceArn, "tagKeys"=>tagKeys))
UntagResource(resourceArn, tagKeys, args::AbstractDict{String, <: Any}) = iotsecuretunneling("UntagResource", Dict{String, Any}("resourceArn"=>resourceArn, "tagKeys"=>tagKeys, args...))
