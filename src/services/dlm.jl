# This file is auto-generated by AWSMetadata.jl
include("../AWSServices.jl")
include("_utilities.jl")
using Compat
using UUIDs
using .AWSServices: dlm

"""
    CreateLifecyclePolicy()

Creates a policy to manage the lifecycle of the specified AWS resources. You can create up to 100 lifecycle policies.

# Required Parameters
- `Description`: A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+  are supported.
- `ExecutionRoleArn`: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
- `PolicyDetails`: The configuration details of the lifecycle policy.
- `State`: The desired activation state of the lifecycle policy after creation.

# Optional Parameters
- `Tags`: The tags to apply to the lifecycle policy during creation.
"""
CreateLifecyclePolicy(Description, ExecutionRoleArn, PolicyDetails, State) = dlm("POST", "/policies", Dict{String, Any}("Description"=>Description, "ExecutionRoleArn"=>ExecutionRoleArn, "PolicyDetails"=>PolicyDetails, "State"=>State))
CreateLifecyclePolicy(Description, ExecutionRoleArn, PolicyDetails, State, args::AbstractDict{String, <:Any}) = dlm("POST", "/policies", Dict{String, Any}("Description"=>Description, "ExecutionRoleArn"=>ExecutionRoleArn, "PolicyDetails"=>PolicyDetails, "State"=>State, args...))

"""
    DeleteLifecyclePolicy()

Deletes the specified lifecycle policy and halts the automated operations that the policy specified.

# Required Parameters
- `policyId`: The identifier of the lifecycle policy.

"""
DeleteLifecyclePolicy(policyId) = dlm("DELETE", "/policies/$(policyId)/")
DeleteLifecyclePolicy(policyId, args::AbstractDict{String, <:Any}) = dlm("DELETE", "/policies/$(policyId)/", args)

"""
    GetLifecyclePolicies()

Gets summary information about all or the specified data lifecycle policies. To get complete information about a policy, use GetLifecyclePolicy.

# Optional Parameters
- `policyIds`: The identifiers of the data lifecycle policies.
- `resourceTypes`: The resource type.
- `state`: The activation state.
- `tagsToAdd`: The tags to add to objects created by the policy. Tags are strings in the format key=value. These user-defined tags are added in addition to the AWS-added lifecycle tags.
- `targetTags`: The target tag for a policy. Tags are strings in the format key=value.
"""
GetLifecyclePolicies() = dlm("GET", "/policies")
GetLifecyclePolicies(args::AbstractDict{String, Any}) = dlm("GET", "/policies", args)

"""
    GetLifecyclePolicy()

Gets detailed information about the specified lifecycle policy.

# Required Parameters
- `policyId`: The identifier of the lifecycle policy.

"""
GetLifecyclePolicy(policyId) = dlm("GET", "/policies/$(policyId)/")
GetLifecyclePolicy(policyId, args::AbstractDict{String, <:Any}) = dlm("GET", "/policies/$(policyId)/", args)

"""
    ListTagsForResource()

Lists the tags for the specified resource.

# Required Parameters
- `resourceArn`: The Amazon Resource Name (ARN) of the resource.

"""
ListTagsForResource(resourceArn) = dlm("GET", "/tags/$(resourceArn)")
ListTagsForResource(resourceArn, args::AbstractDict{String, <:Any}) = dlm("GET", "/tags/$(resourceArn)", args)

"""
    TagResource()

Adds the specified tags to the specified resource.

# Required Parameters
- `Tags`: One or more tags.
- `resourceArn`: The Amazon Resource Name (ARN) of the resource.

"""
TagResource(Tags, resourceArn) = dlm("POST", "/tags/$(resourceArn)", Dict{String, Any}("Tags"=>Tags))
TagResource(Tags, resourceArn, args::AbstractDict{String, <:Any}) = dlm("POST", "/tags/$(resourceArn)", Dict{String, Any}("Tags"=>Tags, args...))

"""
    UntagResource()

Removes the specified tags from the specified resource.

# Required Parameters
- `resourceArn`: The Amazon Resource Name (ARN) of the resource.
- `tagKeys`: The tag keys.

"""
UntagResource(resourceArn, tagKeys) = dlm("DELETE", "/tags/$(resourceArn)", Dict{String, Any}("tagKeys"=>tagKeys))
UntagResource(resourceArn, tagKeys, args::AbstractDict{String, <:Any}) = dlm("DELETE", "/tags/$(resourceArn)", Dict{String, Any}("tagKeys"=>tagKeys, args...))

"""
    UpdateLifecyclePolicy()

Updates the specified lifecycle policy.

# Required Parameters
- `policyId`: The identifier of the lifecycle policy.

# Optional Parameters
- `Description`: A description of the lifecycle policy.
- `ExecutionRoleArn`: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
- `PolicyDetails`: The configuration of the lifecycle policy. You cannot update the policy type or the resource type.
- `State`: The desired activation state of the lifecycle policy after creation.
"""
UpdateLifecyclePolicy(policyId) = dlm("PATCH", "/policies/$(policyId)")
UpdateLifecyclePolicy(policyId, args::AbstractDict{String, <:Any}) = dlm("PATCH", "/policies/$(policyId)", args)
