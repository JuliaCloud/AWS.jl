# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: cost_and_usage_report_service
using AWS.Compat
using AWS.UUIDs

"""
    delete_report_definition()
    delete_report_definition(params::Dict{String,<:Any})

Deletes the specified report.

# Optional Parameters
Optional parameters can be passed as a `params::Dict{String,<:Any}`. Valid keys are:
- `"ReportName"`: The name of the report that you want to delete. The name must be unique,
  is case sensitive, and can't include spaces.
"""
function delete_report_definition(; aws_config::AbstractAWSConfig=global_aws_config())
    return cost_and_usage_report_service(
        "DeleteReportDefinition"; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET
    )
end
function delete_report_definition(
    params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config()
)
    return cost_and_usage_report_service(
        "DeleteReportDefinition",
        params;
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    describe_report_definitions()
    describe_report_definitions(params::Dict{String,<:Any})

Lists the AWS Cost and Usage reports available to this account.

# Optional Parameters
Optional parameters can be passed as a `params::Dict{String,<:Any}`. Valid keys are:
- `"MaxResults"`:
- `"NextToken"`:
"""
function describe_report_definitions(; aws_config::AbstractAWSConfig=global_aws_config())
    return cost_and_usage_report_service(
        "DescribeReportDefinitions"; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET
    )
end
function describe_report_definitions(
    params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config()
)
    return cost_and_usage_report_service(
        "DescribeReportDefinitions",
        params;
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    modify_report_definition(report_definition, report_name)
    modify_report_definition(report_definition, report_name, params::Dict{String,<:Any})

Allows you to programatically update your report preferences.

# Arguments
- `report_definition`:
- `report_name`:

"""
function modify_report_definition(
    ReportDefinition, ReportName; aws_config::AbstractAWSConfig=global_aws_config()
)
    return cost_and_usage_report_service(
        "ModifyReportDefinition",
        Dict{String,Any}(
            "ReportDefinition" => ReportDefinition, "ReportName" => ReportName
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
function modify_report_definition(
    ReportDefinition,
    ReportName,
    params::AbstractDict{String};
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return cost_and_usage_report_service(
        "ModifyReportDefinition",
        Dict{String,Any}(
            mergewith(
                _merge,
                Dict{String,Any}(
                    "ReportDefinition" => ReportDefinition, "ReportName" => ReportName
                ),
                params,
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    put_report_definition(report_definition)
    put_report_definition(report_definition, params::Dict{String,<:Any})

Creates a new report using the description that you provide.

# Arguments
- `report_definition`: Represents the output of the PutReportDefinition operation. The
  content consists of the detailed metadata and data file information.

"""
function put_report_definition(
    ReportDefinition; aws_config::AbstractAWSConfig=global_aws_config()
)
    return cost_and_usage_report_service(
        "PutReportDefinition",
        Dict{String,Any}("ReportDefinition" => ReportDefinition);
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
function put_report_definition(
    ReportDefinition,
    params::AbstractDict{String};
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return cost_and_usage_report_service(
        "PutReportDefinition",
        Dict{String,Any}(
            mergewith(
                _merge, Dict{String,Any}("ReportDefinition" => ReportDefinition), params
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
