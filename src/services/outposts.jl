# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: outposts

using Compat
using UUIDs
"""
    CreateOutpost()

Creates an Outpost.

# Required Parameters
- `SiteId`: 

# Optional Parameters
- `AvailabilityZone`: 
- `AvailabilityZoneId`: 
- `Description`: 
- `Name`: 
"""
CreateOutpost(SiteId; aws::AWSConfig=AWSConfig()) = outposts("POST", "/outposts", Dict{String, Any}("SiteId"=>SiteId))
CreateOutpost(SiteId, args::AbstractDict{String, <:Any}; aws::AWSConfig=AWSConfig()) = outposts("POST", "/outposts", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("SiteId"=>SiteId), args)); aws=aws)

"""
    DeleteOutpost()

Deletes the Outpost.

# Required Parameters
- `OutpostId`: 

"""
DeleteOutpost(OutpostId; aws::AWSConfig=AWSConfig()) = outposts("DELETE", "/outposts/$(OutpostId)"; aws=aws)
DeleteOutpost(OutpostId, args::AbstractDict{String, <:Any}; aws::AWSConfig=AWSConfig()) = outposts("DELETE", "/outposts/$(OutpostId)", args; aws=aws)

"""
    DeleteSite()

Deletes the site.

# Required Parameters
- `SiteId`: 

"""
DeleteSite(SiteId; aws::AWSConfig=AWSConfig()) = outposts("DELETE", "/sites/$(SiteId)"; aws=aws)
DeleteSite(SiteId, args::AbstractDict{String, <:Any}; aws::AWSConfig=AWSConfig()) = outposts("DELETE", "/sites/$(SiteId)", args; aws=aws)

"""
    GetOutpost()

Gets information about the specified Outpost.

# Required Parameters
- `OutpostId`: 

"""
GetOutpost(OutpostId; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts/$(OutpostId)"; aws=aws)
GetOutpost(OutpostId, args::AbstractDict{String, <:Any}; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts/$(OutpostId)", args; aws=aws)

"""
    GetOutpostInstanceTypes()

Lists the instance types for the specified Outpost.

# Required Parameters
- `OutpostId`: 

# Optional Parameters
- `MaxResults`: 
- `NextToken`: 
"""
GetOutpostInstanceTypes(OutpostId; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts/$(OutpostId)/instanceTypes"; aws=aws)
GetOutpostInstanceTypes(OutpostId, args::AbstractDict{String, <:Any}; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts/$(OutpostId)/instanceTypes", args; aws=aws)

"""
    ListOutposts()

List the Outposts for your AWS account.

# Optional Parameters
- `MaxResults`: 
- `NextToken`: 
"""
ListOutposts(; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts"; aws=aws)
ListOutposts(args::AbstractDict{String, Any}; aws::AWSConfig=AWSConfig()) = outposts("GET", "/outposts", args; aws=aws)

"""
    ListSites()

Lists the sites for the specified AWS account.

# Optional Parameters
- `MaxResults`: 
- `NextToken`: 
"""
ListSites(; aws::AWSConfig=AWSConfig()) = outposts("GET", "/sites"; aws=aws)
ListSites(args::AbstractDict{String, Any}; aws::AWSConfig=AWSConfig()) = outposts("GET", "/sites", args; aws=aws)
